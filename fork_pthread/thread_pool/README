//******************************************************************************************************************************
//一、本节主要是学习线程池
//1.所谓线程池其实就是一个任务队列，用链表实现。
//2.可以将线程池的开启和关闭看作一个公司的运行和倒闭，线程池里的线程看作公司的员工，员工从任务队列中拿任务依次完成，在没有任务并且公司没倒闭的情况下就睡眠等待任务来唤醒。
//3.如果有线程陷入死循坏，main线程会堵塞在结合线程函数
//4.当所有的员工（线程）都有任务时，唤醒一下也不会影响什么
//二、主要学习的函数
//1.thread_pool pool， init_pool(&pool, 2);//线程池的初始化，创建两条线程
//2.destroy_pool(&pool);//销毁线程池
//3.bool add_task(thread_pool *pool,void *(*task)(void *arg), void *arg);//往线程池里面添加任务节点
//4.int add_thread(thread_pool *pool,unsigned int additional_threads_number);//添加线程池中线程的数量
//5.int remove_thread(thread_pool *pool,unsigned int removing_threads_number);	//移除线程
//********************************************************************************************************************************